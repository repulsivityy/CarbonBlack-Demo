################################
Remote Desktop Protocol
################################
A good starting point since many organisations are on windows, and would use the inbuilt tool. Commonly used for jumphosts to access sensitive environments, like server farms, critical servers, cloud workloads, etc. 

Typical Behaviour: 

Network: 
- Uses Remote Desktop Protocol
- Encapsulated and encrypted over TCP 
- Typically uses port 3389

DLLs used for RDP:
- mstscax.dll - Remote Desktop ActiveX Control used to create and manage RDP sessions
- rdpcorets.dll - Core functionality of the RDP protocol

################################
###### When Enabling RDP #######
################################
-- Via powershell:
Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0  ---> created by authorised users only
-- Via cmd:
reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f


Registry Keys:
HKLM\System\CurrentControlSet\Control\Terminal Server\fDenyTSConnections
HKLM\System\CurrentControlSet\Control\Class\{random}\0133\DriverVersion ---> created by NT AUTHORITY\SYSTEM
HKLM\System\CurrentControlSet\Control\Terminal Server\updateRDStatus

Processes:
- C:\Windows\system32\SystemSettingsAdminFlows.exe RemoteDesktopTurnOnRdp - (ProcessCreate / NtAllocateVirtualMemory) ---> Created by authorised users only
- C:\Windows\System32\svchost.exe -k termsvcs -s TermService (ProcessCreate) ---> Created by NT AUTHORITY\NETWORK SERVICE
- C:\Windows\System32\svchost.exe -k LocalSystemNetworkRestricted -p -s UmRdpService (ProcessCreate) ---> NT AUTHORITY\SYSTEM

Users: Should only be done by authorised users and NT/SYSTEM


## When disabling NLA ## 
Attackers may use this 

Processes:
C:\Windows\system32\SystemSettingsAdminFlows.exe" RemoteDesktopTurnOffNla (ProcessCreate) ---> Created by authorised users only

Registry: 
HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp\UserAuthentication

### Detecting with Carbon Black Cloud ###

To detect when RDP setting is changed in your environment:
- (regmod_name:HKLM\\System\\CurrentControlSet\\Control\\Terminal\ Server\\updateRDStatus) OR (regmod_name:HKLM\\System\\CurrentControlSet\\Control\\Terminal\ Server\\fDenyTSConnections)  #run in process tab

To detect when NLA is changed in your environment: 
- (regmod_name:HKLM\\System\\CurrentControlSet\\Control\\Terminal\ Server\\WinStations\\RDP\-Tcp\\UserAuthentication)  #run in process tab
- (process_name:SystemSettingsAdminFlows.exe) AND (process_cmdline:RemoteDesktopTurnOffNla)

LiveQuery: 
SELECT CASE DATA
           WHEN 0 THEN "Disabled"
           WHEN 1 THEN "Enabled"
       END "RDP NLA Status"
FROM registry
WHERE PATH="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp\UserAuthentication";


################################
###### Connecting on RDP #######
################################

Detecting outbound connection on non-standard RDP port (Client -> Server)
- process_name:mstsc.exe AND (netconn_inbound:false AND (netconn_application_protocol:RDP OR (netconn_protocol:PROTO_TCP OR netconn_protocol:PROTO_UDP)) AND NOT netconn_port:3389)  #XDR module required

Detecting inbound connection on non-standard RDP port
- process_name:mstsc.exe AND (netconn_inbound:true AND (netconn_application_protocol:RDP OR (netconn_protocol:PROTO_TCP OR netconn_protocol:PROTO_UDP)) AND NOT netconn_port:3389)  #XDR module required

Detecting presense of a RDP sessions established
- process_name:mstsc.exe AND netconn_count:[1 TO *]